#include <wiringPi.h>
#include <stdio.h>
#include <stdlib.h>
//#include <math.h>
 
typedef unsigned char uint8;
typedef unsigned int  uint16;
typedef unsigned long uint32;
 
#define HIGH_TIME 32
#define SoilPin 0
#define pinNumber 1
#define BeePin 2
#define WaterPin 3

uint32 databuf;

int MaxHum = 60;
int MaxTem = 25;
long last;
int humidity_bit;
int temperature_bit;
int humidity_point_bit;
int temperature_point_bit;
  
uint8 readSensorData(void)
{
    uint8 crc;
    uint8 i;
  
    pinMode(pinNumber, OUTPUT); // set mode to output
    digitalWrite(pinNumber, LOW); // output a high level 
    delay(25);
    digitalWrite(pinNumber, HIGH); // output a low level 
    pinMode(pinNumber, INPUT); // set mode to input
    pullUpDnControl(pinNumber, PUD_UP);
 
    delayMicroseconds(27);
    if (digitalRead(pinNumber) == LOW) //SENSOR ANS
    {
        while (!digitalRead(pinNumber))
            ; //wait to high
 
        for (i = 0; i < 32; i++)
        {
            while (digitalRead(pinNumber))
                ; //data clock start
            while (!digitalRead(pinNumber))
                ; //data start
            delayMicroseconds(HIGH_TIME);
            databuf *= 2;
            if (digitalRead(pinNumber) == HIGH) //1
            {
                databuf++;
            }
        }
 
        for (i = 0; i < 8; i++)
        {
            while (digitalRead(pinNumber))
                ; //data clock start
            while (!digitalRead(pinNumber))
                ; //data start
            delayMicroseconds(HIGH_TIME);
            crc *= 2;  
            if (digitalRead(pinNumber) == HIGH) //1
            {
                crc++;
            }
        }
        return 1;
    }
    else
    {
        return 0;
    }
}

void Beep(int interval)
{
    
    if((millis()-last)>interval)
    {
        digitalWrite(BeePin,!digitalRead(BeePin));
        last = millis();
    }
}

int main(void)
{
    printf("PIN:%d\n", pinNumber);
 
    if (-1 == wiringPiSetup()) {
        printf("Setup wiringPi failed!");
        return 1;
    }
  
    pinMode(pinNumber, OUTPUT); // set mode to output
    digitalWrite(pinNumber, HIGH); // output a high level 
    pinMode(SoilPin,INPUT);
    pinMode(BeePin,OUTPUT);
    digitalWrite(BeePin, LOW); 
    pinMode(WaterPin,OUTPUT);
    digitalWrite(WaterPin, LOW); 
    printf("Starting...\n");
    last = millis();
    while (1) 
    {
        if (readSensorData())
        {
            humidity_bit = (databuf >> 24) & 0xff;
            humidity_point_bit = (databuf >> 16) & 0xff;
            temperature_bit = (databuf >> 8) & 0xff;
            temperature_point_bit = databuf & 0xff;
            printf("Sensor data read ok!\n");
            printf("temperature :%d.%d\n", temperature_bit,temperature_point_bit);
            printf("humidity :%d.%d\n", humidity_bit,humidity_point_bit);
            if((humidity_bit>MaxHum)&&(temperature_bit>MaxTem))
            {
                Beep(500);
            }
            else
            {
                digitalWrite(BeePin, LOW); 
            }

            databuf = 0;
        }
        
        
        if(digitalRead(SoilPin)==LOW)
        {
            digitalWrite(WaterPin,HIGH);
            printf("soil....\n");
        }
        else
        {
            digitalWrite(WaterPin,LOW);
        }
        delay(500);
    }
    return 0;
}
